version: '3'

services:
  
  db-news:
    image: postgres
    environment:
      - POSTGRES_DB=jabka_news
      - POSTGRES_USER=jabka
      - POSTGRES_PASSWORD=123
    ports:
      - 5435:5432
  #    volumes:
  #      - db_data_news:/var/lib/postgresql/data

  db-user:
    image: postgres
    environment:
      - POSTGRES_DB=jabka_user
      - POSTGRES_USER=jabka
      - POSTGRES_PASSWORD=123
    ports:
      - 5436:5432
  #    volumes:
  #      - db_data_user:/var/lib/postgresql/data

  db-study:
    image: postgres
    environment:
      - POSTGRES_DB=jabka_study
      - POSTGRES_USER=jabka
      - POSTGRES_PASSWORD=123
    ports:
      - 5437:5432
  #
  ##
  user-service:
    depends_on:
      - db-user
    container_name: user-service
    build:
      context: .
      dockerfile: dockerfile-user
    network_mode: host
    environment:
      - LOKI_HOST=loki
      - TEMPO_HOST=tempo

  study-service:
    depends_on:
      - db-study
    container_name: study-service
    build:
      context: .
      dockerfile: dockerfile-study
    network_mode: host
    environment:
      - LOKI_HOST=loki
      - TEMPO_HOST=tempo
  ##
  gateway-service:
    container_name: gateway-service
    build:
      context: .
      dockerfile: dockerfile-gateway
    network_mode: host
    environment:
      - LOKI_HOST=loki
      - TEMPO_HOST=tempo
  #
  news-service:
    depends_on:
      - db-news
    container_name: news-service
    build:
      context: .
      dockerfile: dockerfile-news
    network_mode: host
    restart: on-failure
    environment:
      - LOKI_HOST=loki
      - TEMPO_HOST=tempo

  tempo:
    image: grafana/tempo
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./docker/tempo/tempo-local.yml:/etc/tempo.yaml
      - ./docker/tempo/tempo-data:/tmp/tempo
    ports:
      - "14268"  # jaeger ingest
      - "9411:9411" # zipkin

  loki:
    image: grafana/loki
    command: [ "-config.file=/etc/loki/local-config.yaml" ]
    ports:
      - "3100:3100"
    environment:
      - JAEGER_AGENT_HOST=tempo
      - JAEGER_ENDPOINT=http://tempo:14268/api/traces
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=1

  prometheus:
    image: prom/prometheus
    extra_hosts: [ 'host.docker.internal:host-gateway' ]
    command:
      - --enable-feature=exemplar-storage
      - --config.file=/etc/prometheus/prometheus.yml
    depends_on:
      - loki
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
#    networks:
#      monitoring:
#        aliases:
#          - prometheus

  grafana:
    image: grafana/grafana
    volumes:
      - ./docker/grafana/datasources:/etc/grafana/provisioning/datasources
      - ./docker/grafana/dashboards:/etc/grafana/dashboards
      - ./docker/grafana/dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_AUTH_BASIC_ENABLED="false"
      - GF_AUTH_DISABLE_LOGIN_FORM="true"
      - GF_AUTH_DISABLE_SIGNOUT_MENU="true"
      - GF_AUTH_PROXY_ENABLED="true"
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - loki
      - prometheus
    ports:
      - "3000:3000"
#    networks:
#      monitoring:
#        aliases:
#          - grafana
#
#networks:
#  monitoring:


#  front:
#    container_name: front
#    build:
#      context: .
#      dockerfile: dockerfile-front
#    network_mode: host
#    restart: on-failure


#    volumes:
#      - db_data_study:/var/lib/postgresql/data
#volumes:
#  db_data_user:
#    driver: local
#    driver_opts:
#      type: none
#      device: ${PWD}/../db_data/user
#      o: bind 
#  db_data_news:
#    driver: local
#    driver_opts:
#      type: none
#      device: ${PWD}/../db_data/news
#      o: bind
#  db_data_study:
#    driver_opts:
#      type: none
#      device: ${PWD}/../db_data/study
#      o: bind
